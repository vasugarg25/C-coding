question:-https://codeforces.com/contest/99/problem/B



#include<bits/stdc++.h>
#define f(i,a,b) for(i=a;i<b;i++)
#define f_(i,a,b) for(i=a;i>=b;i--)
#define fr(i, a, b) for(i=a;i>=b;i--)
#define T_ ll t; cin>>t; while(t--)
#define NeedForSpeed ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(0)
#define pb push_back
#define mod 1000000007
#define mp make_pair
#define read(a,n) for(i=0;i<n;i++) cin>>a[i]
#define pr(a,n)  for(i=0;i<n;i++) cout<<a[i] << " "; cout<<"\n"
#define ff first
#define ss second
#define iof freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#define sp << " " <<
#define nl << "\n"
#define all(s) s.begin(),s.end()
#define minv(a) *min_element(all(a))
#define setpre(a) cout << setprecision(a) << fixed
 
typedef long long ll ; typedef long double ld;
using namespace std;
// C++ implementation of the approach
#include <bits/stdc++.h>
using namespace std;
 
const int sz = 1e5;
bool isPrime[sz + 1];
 
// Function for Sieve of Eratosthenes
bool iszero(int x)
{
	while(x!=0)
	{
		int l=x%10;
		if(l==0)
		{
			return false;
		}
		x=x/10;
	}
	return true;
}
void sieve()
{
	memset(isPrime, true, sizeof(isPrime));
 
	isPrime[0] = isPrime[1] = false;
 
	for (int i = 2; i * i <= sz; i++) {
		if (isPrime[i]) {
			for (int j = i * i; j < sz; j += i) {
				isPrime[j] = false;
			}
		}
	}
}
 
// Function to print all the prime
// numbers with d digits
void findPrimesD(int d)
{
 
	// Range to check integers
	int left = pow(10, d - 1);
	int right = pow(10, d) - 1;
 
	// For every integer in the range
	for (int i = left; i <= right; i++) {
 
		// If the current integer is prime
		if (isPrime[i]) {
			if(iszero(i))
			{
			
			cout<<i<<endl;
			break;
		}
		}
}
}
bool isPowerOfTwo(int n)
{
   if(n==0)
   return false;
 
   return (ceil(log2(n)) == floor(log2(n)));
}
 bool isPerfectSquare(long double x)
{
  
    if (x >= 0) {
 
        long long sr = sqrt(x);
         
      
        return (sr * sr == x);
    }
    
    return false;
}

int main() {
    NeedForSpeed;
  // T_ {
ll n;
ll i,j;
      cin>>n;
      vector<ll>v(n),a(n);
      set<ll>s;
      for(i=0;i<n;i++)
      {
          cin>>v[i];
          s.insert(v[i]);
          a[i]=v[i];
      }
      if(n==2)
      {   if(a[0]==a[1])
          {
          cout<<"Exemplary pages.";return 0;
          }
         else if(abs(a[0]-a[1])%2==0)
          {   ll d=abs(a[0]-a[1])/2;
              if(v[0]>v[1])
              {
                cout<<d<<" "<<"ml. from cup #"<<2<<" to cup #"<<1<<".";return 0;
              }
              else
              {
                cout<<d<<" "<<"ml. from cup #"<<1<<" to cup #"<<2<<"."; return 0;
              }
          }
          else
          {
             cout<<"Unrecoverable configuration.";return 0;
          }
      }
      //cout<<s.size()<<" ";
      if(s.size()==1)
      {
          cout<<"Exemplary pages.";return 0;
      }
      else if(s.size()!=3&&s.size()!=1)
      {
          cout<<"Unrecoverable configuration.";return 0;
      }
      sort(a.begin(),a.end());
      if(a[1]-a[0]!=a[n-1]-a[n-2])
      {
        cout<<"Unrecoverable configuration.";return 0;
      }
      else
      {
          ll d=a[1]-a[0],mx,mn;
          for(i=0;i<n;i++)
          {
              if(v[i]==a[0]){mn=i+1;}
              else if(v[i]==a[n-1]){mx=i+1;}
          }
          cout<<d<<" "<<"ml. from cup #"<<mn<<" to cup #"<<mx<<".";
      }
 
    
//  }
    return 0;
}