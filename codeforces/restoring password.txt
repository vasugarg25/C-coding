#include<bits/stdc++.h>
#define f(i,a,b) for(i=a;i<b;i++)
#define f_(i,a,b) for(i=a;i>=b;i--)
#define fr(i, a, b) for(i=a;i>=b;i--)
#define T_ ll t; cin>>t; while(t--)
#define NeedForSpeed ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(0)
#define pb push_back
#define mod 1000000007
#define mp make_pair
#define read(a,n) for(i=0;i<n;i++) cin>>a[i]
#define pr(a,n)  for(i=0;i<n;i++) cout<<a[i] << " "; cout<<"\n"
#define ff first
#define ss second
#define iof freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#define sp << " " <<
#define nl << "\n"
#define all(s) s.begin(),s.end()
#define minv(a) *min_element(all(a))
#define setpre(a) cout << setprecision(a) << fixed
 
typedef long long ll ; typedef long double ld;
using namespace std;
// C++ implementation of the approach
#include <bits/stdc++.h>
using namespace std;
 
const int sz = 1e5;
bool isPrime[sz + 1];
 
// Function for Sieve of Eratosthenes
bool iszero(int x)
{
	while(x!=0)
	{
		int l=x%10;
		if(l==0)
		{
			return false;
		}
		x=x/10;
	}
	return true;
}
void sieve()
{
	memset(isPrime, true, sizeof(isPrime));
 
	isPrime[0] = isPrime[1] = false;
 
	for (int i = 2; i * i <= sz; i++) {
		if (isPrime[i]) {
			for (int j = i * i; j < sz; j += i) {
				isPrime[j] = false;
			}
		}
	}
}
 
// Function to print all the prime
// numbers with d digits
void findPrimesD(int d)
{
 
	// Range to check integers
	int left = pow(10, d - 1);
	int right = pow(10, d) - 1;
 
	// For every integer in the range
	for (int i = left; i <= right; i++) {
 
		// If the current integer is prime
		if (isPrime[i]) {
			if(iszero(i))
			{
			
			cout<<i<<endl;
			break;
		}
		}
}
}
bool isPowerOfTwo(int n)
{
   if(n==0)
   return false;
 
   return (ceil(log2(n)) == floor(log2(n)));
}
 bool isPerfectSquare(long double x)
{
  
    if (x >= 0) {
 
        long long sr = sqrt(x);
         
      
        return (sr * sr == x);
    }
    
    return false;
}
ll solve(ll n)
{
	ll c1=0;
	ll g=n;
	while(g!=0)
	{
		g=g/10;
		c1++;
	}
	return c1;
	
	
	
	
}
int main()
{
	NeedForSpeed;
//T_{
 string s;
 cin>>s;
 vector<string> v;
 vector<int> l;
 for(int i=0;i<10;i++)
 {
 	string d;
 	cin>>d;
 	v.push_back(d);
 }
 for(int i=0;i<s.size();i=i+10)
 {
 	string a="";
 	for(int j=i;j<i+10;j++)
 	{
 	//	string q=s[j];
 		a=a+s[j];
	 }
	 //cout<<a;
	 	 for(int k=0;k<10;k++)
	 {
	 	if(a==v[k])
	 	{
	 		l.push_back(k);
	 		break;
		 }
	 }
 }
 
 for(int i=0;i<l.size();i++)
 {
 	cout<<l[i];
 }

	return 0;
}
 